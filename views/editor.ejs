<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document Editor</title>
  <link href="/css/output.css" rel="stylesheet">
  <script src="/socket.io/socket.io.js"></script>
</head>
<body class="bg-gray-100 min-h-screen flex items-center justify-center">
  <div class="w-full max-w-4xl bg-white p-8 rounded-lg shadow-lg">
    <h1 class="text-2xl font-bold mb-6 text-center">Editing: <%= document.title %></h1>
    <textarea id="editor" class="w-full h-96 px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500"><%= document.content %></textarea>
    
    <div id="userNotifications" class="mt-10 text-center text-sm text-gray-600">
        <%= document.content  %>
    </div>

    <script>
      const socket = io();
      const editor = document.getElementById('editor');
      const documentId = '<%= document._id %>';
      const userNotifications = document.getElementById('userNotifications');
      
      let isUserTyping = false;

      socket.emit('joinDocument', documentId);

      // Load the document when a user joins
      socket.on('loadDocument', (content) => {
        editor.value = content;
      });

      // Emit changes made by the user
      editor.addEventListener('input', () => {
        if (!isUserTyping) {
          isUserTyping = true;
          socket.emit('editDocument', editor.value);
          setTimeout(() => {
            isUserTyping = false;
          }, 300); // Adjust the timeout duration as needed
        }
      });

      // Receive changes from other users
      socket.on('receiveChanges', (content) => {
        if (!isUserTyping) { // Avoid overwriting user input
          editor.value = content;
        }
      });

    
    </script>
  </div>
</body>
</html>
